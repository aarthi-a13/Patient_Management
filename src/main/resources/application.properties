# Server Port
server.port=8080
# Database Configuration
#spring.datasource.url=jdbc:postgresql://nvop83l34r.dnhhsxin57.tsdb.cloud.timescale.com:38771/tsdb?sslmode=require
#spring.datasource.username=tsdbadmin
#spring.datasource.password=bx2cw7v1cwl1kghb
spring.datasource.url=jdbc:postgresql://localhost:5432/poc
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
# Enable virtual threads for Tomcat (supported in Spring Boot 3.2+)
spring.threads.virtual.enabled=true
# Logging configuration (INFO level provides a good balance)
logging.level.com.healthcare.app=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.data.jpa.repository=DEBUG
# Actuator endpoint configuration (expose health and info)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.health.util.event

# User event topic configuration - using the property name expected by EventProducerService
user.event.topic=user-topic